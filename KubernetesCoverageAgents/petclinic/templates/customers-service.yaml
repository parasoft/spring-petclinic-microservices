apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.customers.name | quote }}
  labels:
    app: {{ .Values.app.name | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app.name | quote }}
      microservice: {{ .Values.customers.name | quote }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name | quote }}
        microservice: {{ .Values.customers.name | quote }}
    spec:
      containers:
      - name: {{ .Values.customers.name | quote }}
        image: harbor.parasoft.com/ctp/springcommunity/spring-petclinic-customers-service:latest
        imagePullPolicy: Always
        command: ["./dockerize"]
        args: ["-wait=tcp://{{ .Values.discovery.service.name }}:{{ .Values.discovery.service.port }}", "-timeout=60s", "--", "java", "org.springframework.boot.loader.JarLauncher"]
        ports:
        - containerPort: {{ .Values.customers.containerPort }}
        - containerPort: {{ .Values.customers.covagents.port }}
        env:
        - name: eureka.instance.hostname
          value: {{ .Values.customers.service.name | quote }}
        - name: management.zipkin.tracing.endpoint
          value: http://{{ .Values.tracing.service.name }}:{{ .Values.tracing.service.port }}/api/v2/spans
        - name: JDK_JAVA_OPTIONS
          value: "-javaagent:{{ .Values.customers.covagents.mountPath }}/agent.jar=settings={{ .Values.customers.config.mountPath }}/agent.properties"
        volumeMounts:
        - name: {{ .Values.customers.volume.name | quote }}
          mountPath: {{ .Values.customers.covagents.mountPath }}
        - name: {{ .Values.customers.config.name | quote }}
          mountPath: {{ .Values.customers.config.mountPath }}
      initContainers:
      - name: {{ .Values.customers.init.name | quote }}
        image: harbor.parasoft.com/ctp/java-coverage-init-container:latest
        command: ['sh', '-c', 'cp /agent/*.jar {{ .Values.customers.init.mountPath }}/']
        volumeMounts:
        - name: {{ .Values.customers.volume.name | quote }}
          mountPath: {{ .Values.customers.init.mountPath }}
      {{ if .Values.images.auth }}
      imagePullSecrets:
      - name: {{ .Values.images.secret | quote }}
      {{ end }}
      volumes:
      - name: {{ .Values.customers.volume.name | quote }}
        emptyDir: {}
      - name: {{ .Values.customers.config.name | quote }}
        configMap:
          name: {{ .Values.customers.config.name | quote }} 
          items:
            - key: "agent.properties"
              path: "agent.properties"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.customers.config.name | quote }}
data:
  agent.properties: {{ .Values.customers.config.properties | toYaml | indent 1 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.customers.service.name | quote }}
spec:
  ports:
  - port: {{ .Values.customers.service.port }}
    protocol: TCP
    targetPort: {{ .Values.customers.containerPort }}
  selector:
    app: {{ .Values.app.name | quote }}
    microservice: {{ .Values.customers.name | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.customers.covagents.service.name | quote }}
spec:
  ports:
  - port: {{ .Values.customers.covagents.service.port }}
    protocol: TCP
    targetPort: {{ .Values.customers.covagents.port }}
  selector:
    app: {{ .Values.app.name | quote }}
    microservice: {{ .Values.customers.name | quote }}
